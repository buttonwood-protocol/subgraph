type Factory @entity {
  " factory contract address "
  id: ID!
  " number of bonds created "
  bondCount: BigInt!
}

type Token @entity {
  " token address "
  id: ID!
  " token symbol "
  symbol: String!
  " token name "
  name: String!
  " token decimals "
  decimals: BigInt!
  " token total supply "
  totalSupply: BigInt!
}

type Tranche @entity {
  " tranche token address "
  id: ID!
  " reference to the bond in which this tranche belongs "
  bond: Bond!
  " reference to the tranche token contract "
  token: Token!
  " ratio of this tranche, all tranche ratios sum to 1000 "
  ratio: BigInt!
  " index of this tranche, i.e. A-tranche is 0, B is 1 and so on "
  index: BigInt!
  " The amount of collateral held by the contract. Is 0 until bond is matured, and after that point will update with rebases and user redemptions "
  totalCollateral: BigInt!
  " The amount of collateral the tranche would receive if the bond were to be matured at this point in time. Post maturity this is equal to totalCollateral "
  totalCollateralSimulated: BigInt!
  " The amount of collateral in this tranche for redemption at time bond matured "
  totalCollateralAtMaturity: BigInt
  " token total supply at time bond matured "
  totalSupplyAtMaturity: BigInt
}

type Bond @entity {
  " bond address "
  id: ID!
  " address of the creator "
  creator: String!
  " Deposit limit of the bond "
  depositLimit: BigInt!
  " address of the owner "
  owner: String!
  " reference to the collateral token "
  collateral: Token!
  " The tranches and ratios in a list "
  tranches: [Tranche!]!
  " The fee collected by bond owner "
  feeBps: BigInt!
  " date of maturity as a unix timestamp "
  maturityDate: BigInt!
  " date bond was matured as a unix timestamp "
  maturedDate: BigInt
  " true if this bond is mature, else false "
  isMature: Boolean!
  " Total amount of debt distributed. Equal to the sum of tranche total supplies "
  totalDebt: BigInt!
  " Total amount of debt distributed at time bond matured. Equal to the sum of tranche total supplies "
  totalDebtAtMaturity: BigInt
  " The amount of collateral locked in this bond "
  totalCollateral: BigInt!
  " The amount of collateral locked in this bond at time bond matured "
  totalCollateralAtMaturity: BigInt
}

#
# Current token balance of a particular Ethereum account
#
type Account @entity {
  " Account address "
  id: ID!

  " Tranche token balances that this account holds "
  balances: [AccountBalance!]! @derivedFrom(field: "account")
}

#
# Current token balance of a particular Ethereum account
#
type AccountBalance @entity {
  " Equals to: <accountAddress>-<tokenAddress>"
  id: ID!

  " Account address "
  account: Account!

  " Tranche token address "
  tranche: Tranche!

  " Current account balance "
  amount: BigInt!

  " Block number in which the balance was last modified "
  block: BigInt

  " Last modified timestamp in seconds "
  modified: BigInt

  " Hash of the last transaction that modified the balance "
  transaction: Bytes
}
