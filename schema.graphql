type Factory @entity {
  id: ID!
  # number of pools created
  bondCount: BigInt!
}

type Token @entity {
  # token address
  id: ID!
  # token symbol
  symbol: String!
  # token name
  name: String!
  # token decimals
  decimals: BigInt!
  # token total supply
  totalSupply: BigInt!
}

type Tranche @entity {
  id: ID!
  # reference to the bond in which this tranche belongs
  bond: Bond!
  # reference to the tranche token contract
  token: Token!
  # ratio of this tranche as a proportion of the total
  ratio: BigDecimal!
  # index of this tranche, i.e. A-tranche is 0, B is 1 and so on
  index: BigInt!
  # The amount of collateral in this tranche for redemption
  totalCollateral: BigInt!
}

type Bond @entity {
  # bond address
  id: ID!
  # address of the owner
  owners: [String]!
  # reference to the collateral token
  collateral: Token!
  # The tranches and ratios in a list
  tranches: [Tranche]!
  # date of maturity as a unix timestamp
  maturityDate: BigInt!
  # true if this bond is mature, else false
  isMature: Boolean!
  # Total amount of debt distributed. Equal to the sum of tranche total supplies
  totalDebt: BigInt!
  # The amount of collateral locked in this bond
  totalCollateral: BigInt!
}

#
# Current token balance of a particular Ethereum account
#
type Account @entity {
  " Account address "
  id: ID!

  " Tranche token balances that this account holds "
  balances: [AccountBalance!]! @derivedFrom(field: "account")
}

#
# Current token balance of a particular Ethereum account
#
type AccountBalance @entity {
  " Equals to: <accountAddress>-<tokenAddress>"
  id: ID!

  " Account address "
  account: Account!

  " Tranche token address "
  tranche: Tranche!

  " Current account balance "
  amount: BigInt!

  " Block number in which the balance was last modified "
  block: BigInt

  " Last modified timestamp in seconds "
  modified: BigInt

  " Hash of the last transaction that modified the balance "
  transaction: Bytes
}
